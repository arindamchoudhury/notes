
-- https://stackoverflow.com/questions/30800685/how-do-i-make-postgres-extension-available-to-non-superuser

\c pg4e

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";  
ALTER EXTENSION "uuid-ossp" SET SCHEMA public;

GRANT ALL ON ALL FUNCTIONS IN SCHEMA public TO pg4e_user_8087f; 
 

CREATE EXTENSION IF NOT EXISTS "hstore";
ALTER EXTENSION "hstore" SET SCHEMA public;

\dn - List all schemas
\dx - List all extensions
\du - List users

https://en.wikipedia.org/wiki/NoSQL

https://www.theguardian.com/info/2018/nov/30/bye-bye-mongo-hello-postgres

https://developer.olery.com/blog/goodbye-mongodb-hello-postgresql/

http://blog.shippable.com/why-we-moved-from-nosql-mongodb-to-postgressql

https://www.3pillarglobal.com/insights/short-history-databases-rdbms-nosql-beyond

https://dzone.com/articles/mysql-is-a-great-nosql-1

Here are some of our other usage patterns to get great performance from MySQL:

    Do not have queries with joins; only query by primary key or index.

    Do not use sequential primary keys (auto-increment) because they introduce locks. Instead, use client-generated keys, such as GUIDs. Also, when you have master-master replication, auto-increment causes conflicts, so you will have to create key ranges for each instance.

    Any field that is not indexed has no right to exist. Instead, we fold such fields into a single text field (JSON is a good choice).


UUID

https://dba.stackexchange.com/questions/122623/default-value-for-uuid-column-in-postgres

https://www.linuxjournal.com/content/postgresql-nosql-database


